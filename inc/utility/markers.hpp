#pragma once
#include <string>



namespace backend {
namespace detail {

/*!
  \addtogroup utilities
  @{
*/
//XXX This isn't necessary any more, is it?
//! Marks an identifier as generated by the compiler
std::string mark_generated_id(const std::string &in);
//! Creates a name for a function object built from this identifier.
std::string fnize_id(const std::string &in);
//! Creates a name for the container which holds an array.
std::string wrap_array_id(const std::string &in);
//! Creates a name for the wrapping procedure.
std::string wrap_proc_id(const std::string &in);
//! Creates a name for the unique type of an identifier.
std::string typify(const std::string &in);
//! Creates a name for the completed identifier after a synchronization point.
std::string complete(const std::string &in);

/*!
  @}
*/


}
}

